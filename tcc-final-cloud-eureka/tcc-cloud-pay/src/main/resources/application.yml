server:
  port: 8762
  keepAliveTimeOut: 500000

eureka:
  client:
    serviceUrl:
      defaultZone: http://127.0.0.1:8761/eureka/
    healthcheck:
      enabled: true
  instance:
    lease-renewal-interval-in-seconds: 1
    lease-expiration-duration-in-seconds: 5
    
spring:
    profiles:
      active: dev
    application:
      name: tcc-cloud-pay
 
   # 数据库配置
    datasource:
      db:
            type: com.alibaba.druid.pool.DruidDataSource
            driverClassName: com.mysql.jdbc.Driver
            url: jdbc:mysql://127.0.0.1:3306/test_pay?useUnicode=true&characterEncoding=UTF-8&allowMultiQueries=true
            username: root
            password: root
            initialSize: 1
            minIdle: 3
            maxActive: 20
            # 配置获取连接等待超时的时间
            maxWait: 60000
            # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
            timeBetweenEvictionRunsMillis: 60000
            # 配置一个连接在池中最小生存的时间，单位是毫秒
            minEvictableIdleTimeMillis: 300000
            validationQuery: SELECT 1 FROM DUAL
            testWhileIdle: true
            testOnBorrow: false
            testOnReturn: false
            # 打开PSCache，并且指定每个连接上PSCache的大小
            poolPreparedStatements: true
            maxPoolPreparedStatementPerConnectionSize: 20
            # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
            filters: stat,wall,log4j
            # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
            connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
            # 合并多个DruidDataSource的监控数据
            #useGlobalDataSourceStat: true
    
mybatis:
  mapper-locations: classpath*:tcc/cloud/pay/xml/*.xml
  type-aliases-package: org.tcc.cloud.pay.dao

  

